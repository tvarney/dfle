/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * DictionaryFrame.java
 *
 * Created on Aug 18, 2011, 5:19:40 PM
 */
package dfdictionary.gui;

import dfdictionary.object.DFObject;
import dfdictionary.object.DFSymbol;
import dfdictionary.object.DFTag;
import dfdictionary.object.DFWord;
import dfdictionary.io.DFObjectParser;
//import dfdictionary.io.SyntaxException;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;

import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 * @author tvarney
 */
public class DictionaryFrame extends javax.swing.JFrame {
    
    private Map<String, DFWord> words;
    private Map<String, DFSymbol> symbols;
    private JFileChooser jc;
    private File dir;
    private File symFile, wordFile;
    
    /** Creates new form DictionaryFrame */
    public DictionaryFrame() {
        initComponents();
        words = new HashMap<String, DFWord>();
        symbols = new HashMap<String, DFSymbol>();
        
        symbol_panel.setData(symbols, words);
        word_panel.setData(symbols, words);
        
        jc = new JFileChooser();
        jc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        symbolPanel1 = new dfdictionary.gui.SymbolPanel();
        wordPanel1 = new dfdictionary.gui.WordPanel();
        symbolPanel2 = new dfdictionary.gui.SymbolPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        symbol_panel = new dfdictionary.gui.SymbolPanel();
        word_panel = new dfdictionary.gui.WordPanel();
        jMenuBar2 = new javax.swing.JMenuBar();
        loadMenuItem = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        saveAsMenuItem = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane1.addTab("Symbols", symbol_panel);
        jTabbedPane1.addTab("Words", word_panel);

        loadMenuItem.setText("File");

        jMenuItem1.setText("Load");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        loadMenuItem.add(jMenuItem1);
        loadMenuItem.add(jSeparator1);

        saveAsMenuItem.setText("Save");
        loadMenuItem.add(saveAsMenuItem);

        jMenuItem3.setText("Save as");
        loadMenuItem.add(jMenuItem3);
        loadMenuItem.add(jSeparator2);

        jMenuItem6.setText("Quit");
        loadMenuItem.add(jMenuItem6);

        jMenuBar2.add(loadMenuItem);

        jMenu4.setText("Edit");

        jMenuItem4.setText("Undo");
        jMenu4.add(jMenuItem4);

        jMenuItem5.setText("Redo");
        jMenu4.add(jMenuItem5);

        jMenuBar2.add(jMenu4);

        setJMenuBar(jMenuBar2);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jTabbedPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 569, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
    loadAction(); //< hehe
}//GEN-LAST:event_jMenuItem1ActionPerformed

    public void loadAction() {
        if ((jc.showOpenDialog(this)) == JFileChooser.APPROVE_OPTION) {
            dir = jc.getSelectedFile();

            if (!dir.isDirectory()) {
                JOptionPane.showMessageDialog(this, "Invalid directory!");
            }

            symFile = new File(dir, "language_SYM.txt");
            wordFile = new File(dir, "language_word.txt");

            words.clear();
            symbols.clear();

            String fmt = "Error reading %s\n%s";
            if (symFile.isFile()) {
                try {
                    readSymbols(symFile);
                } catch (FileNotFoundException fnfe) {
                    /* Shouldn't be possible */
                } catch (IOException ioe) {
                    String msg = String.format(fmt, "language_SYM.txt",
                            ioe.toString());
                    JOptionPane.showMessageDialog(this, msg);
                }
            }
            if (wordFile.isFile()) {
                try {
                    readWords(wordFile);
                } catch (FileNotFoundException fnfe) {
                    /* Shouldn't be possible */
                } catch (IOException ioe) {
                    String msg = String.format(fmt, "language_word.txt",
                            ioe.toString());
                    JOptionPane.showMessageDialog(this, msg);
                }
            }
            
            //symbol_panel.setData(symbols, words);
        }
    }
    public void readSymbols(File file)
            throws FileNotFoundException, IOException {
        DFObjectParser parser = new DFObjectParser(file);
        DFObject obj;

        while ((obj = parser.next()) != null) {
            if (obj.objectTag().equals(DFTag.SYMBOL)) {
                DFSymbol sym = (DFSymbol) obj;
                symbols.put(sym.tag, sym);
            } else if (obj.objectTag().equals(DFTag.WORD)) {
                DFWord word = (DFWord)obj;
                words.put(word.tag, word);
            } else {
                /* Err... */
            }
        }

        parser.close();
    }

    public void readWords(File file)
            throws FileNotFoundException, IOException {
        DFObjectParser parser = new DFObjectParser(file);
        DFObject obj;

        while ((obj = parser.next()) != null) {
            if (obj.objectTag().equals(DFTag.WORD)) {
                DFWord word = (DFWord)obj;
                words.put(word.tag, word);
            } else if (obj.objectTag().equals(DFTag.SYMBOL)) {
                DFSymbol sym = (DFSymbol) obj;
                symbols.put(sym.tag, sym);
            } else {
                /* Err... */
            }
        }

        parser.close();
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JMenu loadMenuItem;
    private javax.swing.JMenuItem saveAsMenuItem;
    private dfdictionary.gui.SymbolPanel symbolPanel1;
    private dfdictionary.gui.SymbolPanel symbolPanel2;
    private dfdictionary.gui.SymbolPanel symbol_panel;
    private dfdictionary.gui.WordPanel wordPanel1;
    private dfdictionary.gui.WordPanel word_panel;
    // End of variables declaration//GEN-END:variables
}
