/* -*- mode: Java; tab-width: 4 -*- */

/*
 * Copyright (C) 2011 Troy Varney
 * 
 * This program is free software: you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see
 * <http://www.gnu.org/licenses/>.
 */


/*
 * PropertiesEditor.java
 *
 * Created on Sep 1, 2011, 4:15:15 PM
 */
package dfdictionary;

import java.io.File;
import java.io.FileOutputStream;
import java.util.Properties;
import javax.swing.JOptionPane;
import javax.swing.JFileChooser;

/**
 *
 * @author tvarney
 */
public class PropertiesEditor extends javax.swing.JFrame {
    public static final String TRUE = "true";
    public static final String FALSE = "false";
    
    private Properties defs;
    private Properties props;
    private JFileChooser jfc;
    
    /** Creates new form PropertiesEditor */
    public PropertiesEditor(Properties p) {
        defs = p; //< Save so we can write back changes to the main window
        props = new Properties(p);
        jfc = new JFileChooser();
        jfc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        
        initComponents();
    }
    
    private void write() {
        try {
            props.store(new FileOutputStream(new File("config.ini")),
                        "DFDictionary Preferences");
        }catch(Exception e) {
            
        }
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        loadOnStartCBox = new javax.swing.JCheckBox();
        defaultDirCBox = new javax.swing.JCheckBox();
        defaultDirButton = new javax.swing.JButton();
        writeBackupsCBox = new javax.swing.JCheckBox();
        saveButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        defaultDirTextField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Properties");
        setResizable(false);

        loadOnStartCBox.setText("Load on Start");
        loadOnStartCBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadOnStartCBoxActionPerformed(evt);
            }
        });

        defaultDirCBox.setText("Use Default Directory");
        defaultDirCBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                defaultDirCBoxActionPerformed(evt);
            }
        });

        defaultDirButton.setText("Select");
        defaultDirButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                defaultDirButtonActionPerformed(evt);
            }
        });

        writeBackupsCBox.setText("Write Backups");
        writeBackupsCBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                writeBackupsCBoxActionPerformed(evt);
            }
        });

        saveButton.setText("Save");

        cancelButton.setText("Cancel");

        defaultDirTextField.setEnabled(false);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(loadOnStartCBox)
                    .add(writeBackupsCBox)
                    .add(layout.createSequentialGroup()
                        .add(defaultDirCBox)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(defaultDirTextField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(defaultDirButton))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(cancelButton)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(saveButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(loadOnStartCBox)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(writeBackupsCBox)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(defaultDirCBox)
                    .add(defaultDirTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(defaultDirButton))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 23, Short.MAX_VALUE)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(saveButton)
                    .add(cancelButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void loadOnStartCBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadOnStartCBoxActionPerformed
    if(loadOnStartCBox.isSelected()) {
        props.setProperty("load-on-start", TRUE);
    }else {
        props.setProperty("load-on-start", FALSE);
    }
}//GEN-LAST:event_loadOnStartCBoxActionPerformed

private void writeBackupsCBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_writeBackupsCBoxActionPerformed
    if(writeBackupsCBox.isSelected()) {
        props.setProperty("write-backups", TRUE);
    }else {
        props.setProperty("write-backups", FALSE);
    }
}//GEN-LAST:event_writeBackupsCBoxActionPerformed

private void defaultDirCBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_defaultDirCBoxActionPerformed
    if(defaultDirCBox.isSelected()) {
        props.setProperty("use-default-dir", TRUE);
    }else {
        props.setProperty("use-default-dir", FALSE);
    }
}//GEN-LAST:event_defaultDirCBoxActionPerformed

private void defaultDirButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_defaultDirButtonActionPerformed
    int ret = jfc.showOpenDialog(this);
    
    if(ret == JFileChooser.APPROVE_OPTION) {
        File f = jfc.getSelectedFile();
        String abspath = f.getAbsolutePath();
        defaultDirTextField.setText(abspath);
        props.setProperty("default-dir", abspath);
    }
}//GEN-LAST:event_defaultDirButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton defaultDirButton;
    private javax.swing.JCheckBox defaultDirCBox;
    private javax.swing.JTextField defaultDirTextField;
    private javax.swing.JCheckBox loadOnStartCBox;
    private javax.swing.JButton saveButton;
    private javax.swing.JCheckBox writeBackupsCBox;
    // End of variables declaration//GEN-END:variables
}
